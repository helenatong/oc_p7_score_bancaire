name: Deployment_NAME

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
    
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/
      
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'apigrantcredit2'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_ECD45D290B774B42B30B748A18D4F85C }}

  unit_test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest requests
          
      - name: Wait and check deployment
        run: |
          uvicorn api.pythonapi:app --host 0.0.0.0 --port 8000 &
          APP_PID=$!
        
          sleep 30
        
          echo "------------------------------"
          echo "begin API unit tests FROM GITHUB ..."
          echo "------------------------------"
          
          # echo "Waiting for deployment to stabilize..."
          # sleep 60
          # for i in {1..5}; do
          #   if curl -s "https://apigrantcredit2-ddccfad9cpc3akcx.westeurope-01.azurewebsites.net" | grep -q "api_availibility"; then
          #     echo "Application is ready!"
          #     exit 0
          #   fi
          #   echo "Attempt $i: Application not ready yet..."
          #   sleep 30
          # done
          # echo "Application failed to become ready"
          # exit 1
          
      - name: Run integration tests
        run: |
          pytest tests/test_api.py
          kill $APP_PID
          
  # unit_test:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install test dependencies
  #       run: |
  #         pip install pytest requests
  #         pip install pytest pytest
          
  #     - name: Wait for deployment to stabilize
  #       run: sleep 30  # Attendre que l'application soit complètement démarrée
          
  #     - name: Run integration tests
  #       run: pytest tests/test_api.py
